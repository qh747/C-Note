// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: myImportPkg.proto

#include "myImportPkg.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace package {
constexpr MyPackage::MyPackage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : info_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , subpkg_(nullptr){}
struct MyPackageDefaultTypeInternal {
  constexpr MyPackageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~MyPackageDefaultTypeInternal() {}
  union {
    MyPackage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT MyPackageDefaultTypeInternal _MyPackage_default_instance_;
}  // namespace package
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_myImportPkg_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_myImportPkg_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_myImportPkg_2eproto = nullptr;

const uint32_t TableStruct_myImportPkg_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::package::MyPackage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::package::MyPackage, info_),
  PROTOBUF_FIELD_OFFSET(::package::MyPackage, subpkg_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::package::MyPackage)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::package::_MyPackage_default_instance_),
};

const char descriptor_table_protodef_myImportPkg_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\021myImportPkg.proto\022\007package\032\013myPkg.prot"
  "o\"@\n\tMyPackage\022\014\n\004info\030\001 \001(\t\022%\n\006subPkg\030\002"
  " \001(\0132\025.subPackage.MyPackageb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_myImportPkg_2eproto_deps[1] = {
  &::descriptor_table_myPkg_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_myImportPkg_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_myImportPkg_2eproto = {
  false, false, 115, descriptor_table_protodef_myImportPkg_2eproto, "myImportPkg.proto", 
  &descriptor_table_myImportPkg_2eproto_once, descriptor_table_myImportPkg_2eproto_deps, 1, 1,
  schemas, file_default_instances, TableStruct_myImportPkg_2eproto::offsets,
  file_level_metadata_myImportPkg_2eproto, file_level_enum_descriptors_myImportPkg_2eproto, file_level_service_descriptors_myImportPkg_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_myImportPkg_2eproto_getter() {
  return &descriptor_table_myImportPkg_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_myImportPkg_2eproto(&descriptor_table_myImportPkg_2eproto);
namespace package {

// ===================================================================

class MyPackage::_Internal {
 public:
  static const ::subPackage::MyPackage& subpkg(const MyPackage* msg);
};

const ::subPackage::MyPackage&
MyPackage::_Internal::subpkg(const MyPackage* msg) {
  return *msg->subpkg_;
}
void MyPackage::clear_subpkg() {
  if (GetArenaForAllocation() == nullptr && subpkg_ != nullptr) {
    delete subpkg_;
  }
  subpkg_ = nullptr;
}
MyPackage::MyPackage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:package.MyPackage)
}
MyPackage::MyPackage(const MyPackage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  info_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    info_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_info().empty()) {
    info_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_info(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_subpkg()) {
    subpkg_ = new ::subPackage::MyPackage(*from.subpkg_);
  } else {
    subpkg_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:package.MyPackage)
}

inline void MyPackage::SharedCtor() {
info_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  info_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
subpkg_ = nullptr;
}

MyPackage::~MyPackage() {
  // @@protoc_insertion_point(destructor:package.MyPackage)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void MyPackage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  info_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete subpkg_;
}

void MyPackage::ArenaDtor(void* object) {
  MyPackage* _this = reinterpret_cast< MyPackage* >(object);
  (void)_this;
}
void MyPackage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MyPackage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void MyPackage::Clear() {
// @@protoc_insertion_point(message_clear_start:package.MyPackage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  info_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && subpkg_ != nullptr) {
    delete subpkg_;
  }
  subpkg_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MyPackage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string info = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_info();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "package.MyPackage.info"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .subPackage.MyPackage subPkg = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_subpkg(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* MyPackage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:package.MyPackage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string info = 1;
  if (!this->_internal_info().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_info().data(), static_cast<int>(this->_internal_info().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "package.MyPackage.info");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_info(), target);
  }

  // .subPackage.MyPackage subPkg = 2;
  if (this->_internal_has_subpkg()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::subpkg(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:package.MyPackage)
  return target;
}

size_t MyPackage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:package.MyPackage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string info = 1;
  if (!this->_internal_info().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_info());
  }

  // .subPackage.MyPackage subPkg = 2;
  if (this->_internal_has_subpkg()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *subpkg_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MyPackage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    MyPackage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MyPackage::GetClassData() const { return &_class_data_; }

void MyPackage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<MyPackage *>(to)->MergeFrom(
      static_cast<const MyPackage &>(from));
}


void MyPackage::MergeFrom(const MyPackage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:package.MyPackage)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_info().empty()) {
    _internal_set_info(from._internal_info());
  }
  if (from._internal_has_subpkg()) {
    _internal_mutable_subpkg()->::subPackage::MyPackage::MergeFrom(from._internal_subpkg());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MyPackage::CopyFrom(const MyPackage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:package.MyPackage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MyPackage::IsInitialized() const {
  return true;
}

void MyPackage::InternalSwap(MyPackage* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &info_, lhs_arena,
      &other->info_, rhs_arena
  );
  swap(subpkg_, other->subpkg_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MyPackage::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_myImportPkg_2eproto_getter, &descriptor_table_myImportPkg_2eproto_once,
      file_level_metadata_myImportPkg_2eproto[0]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace package
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::package::MyPackage* Arena::CreateMaybeMessage< ::package::MyPackage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::package::MyPackage >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
